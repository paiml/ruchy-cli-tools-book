// ruchy-wc: Count lines, words, and bytes in files
// Chapter 3 example from Ruchy CLI Tools Book

// Counts lines in a file.
// A line is counted for each newline character.
fun count_lines(file_path) {
    let content = fs_read(file_path)
    let lines = 0

    for i in range(0, content.len()) {
        let ch = content[i]
        if ch == "\n" {
            lines = lines + 1
        }
    }

    lines
}

// Counts words in a file.
// Words are whitespace-delimited (space, tab, newline).
fun count_words(file_path) {
    let content = fs_read(file_path)
    let words = 0
    let in_word = false

    for i in range(0, content.len()) {
        let ch = content[i]

        // Count words (whitespace-delimited)
        if ch == " " || ch == "\n" || ch == "\t" {
            if in_word {
                words = words + 1
                in_word = false
            }
        } else {
            in_word = true
        }
    }

    // Count last word if no trailing whitespace
    if in_word {
        words = words + 1
    }

    words
}

// Counts bytes in a file.
// Returns the file size in bytes.
fun count_bytes(file_path) {
    let content = fs_read(file_path)
    content.len()
}

// Main entry point for command-line usage
fun main() {
    let args = env_args()

    if args.len() < 2 {
        println("Usage: ruchy run wc.ruchy <file>")
        println("       ruchy run wc.ruchy -l <file>  (lines only)")
        println("       ruchy run wc.ruchy -w <file>  (words only)")
        println("       ruchy run wc.ruchy -c <file>  (bytes only)")
    } else {
        let has_flag = args.len() >= 3
        let flag = if has_flag { args[1] } else { "" }
        let file_path = if has_flag { args[2] } else { args[1] }

        let lines = count_lines(file_path)
        let words = count_words(file_path)
        let bytes = count_bytes(file_path)

        if flag == "-l" {
            println(lines.to_string() + " " + file_path)
        } else {
            if flag == "-w" {
                println(words.to_string() + " " + file_path)
            } else {
                if flag == "-c" {
                    println(bytes.to_string() + " " + file_path)
                } else {
                    // Default: show all counts
                    println(lines.to_string() + " " + words.to_string() + " " + bytes.to_string() + " " + file_path)
                }
            }
        }
    }
}
