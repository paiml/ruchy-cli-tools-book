---
project: ruchy-cli-tools-book
language: ruchy
style: real-world-clones
description: "Build CLI tools by recreating Unix classics using the Ruchy programming language with EXTREME TDD"
start_date: 2025-10-14
branch_strategy: main_only
quality_philosophy: toyota_way

metadata:
  language_note: "All code written in Ruchy (.ruchy files), NOT Rust"
  ruchy_version: "3.78.0+"
  file_extension: ".ruchy"
  test_extension: "_test.ruchy"
  coverage_target: 85
  test_quality_target: 75  # Comprehensive test coverage
  property_test_target: 80  # % of modules with property tests
  tools_qualification: 15  # All 15 Ruchy tools must pass
  tdd_mandatory: true
  pre_commit_enforced: true

  # Bug Handling Protocol (Toyota Way - Jidoka)
  bug_protocol:
    stop_the_line: true  # MANDATORY: Stop all work when Ruchy language bug found
    bug_repository: "../ruchy or https://github.com/paiml/ruchy"
    severity_levels:
      - blocking  # Cannot continue current task
      - high      # Workaround exists but painful
      - medium    # Minor inconvenience
      - low       # Nice to have fix
    required_actions:
      - "Create minimal reproducible example"
      - "File issue in Ruchy repository"
      - "Document workaround if available"
      - "Add task note in roadmap.yaml"
      - "Track bug resolution status"

sprints:
  - number: 0
    goal: "Infrastructure & Setup"
    duration_days: 3
    tasks:
      - id: S0T1
        title: "Create Ruchy project structure"
        status: completed
        type: infrastructure
        test_required: false
        description: "Setup directory structure for Ruchy CLI tools"
        acceptance_criteria:
          - "examples/ directory with subdirs for each tool"
          - "tests/ directory for test files"
          - "Each tool has .ruchy and _test.ruchy files"

      - id: S0T2
        title: "Create Makefile with all quality gates"
        status: completed
        type: infrastructure
        test_required: false
        description: "Implement make targets for Ruchy: format, lint, test-fast, test-all, dogfood, ci"
        acceptance_criteria:
          - "make validate runs in <10s"
          - "make ci runs full quality suite"
          - "make help documents all targets"
          - "All targets use 'ruchy' commands, not 'cargo'"

      - id: S0T3
        title: "Setup pre-commit hooks"
        status: pending
        type: infrastructure
        test_required: true
        description: "Install git hooks that enforce quality gates"
        test_plan: "Test hook blocks commits with: bad format, clippy warnings, failing tests"
        acceptance_criteria:
          - "make install-hooks creates .git/hooks/pre-commit"
          - "Hook blocks bad commits"
          - "Hook runs in <15s"

      - id: S0T4
        title: "Configure GitHub Actions workflows"
        status: completed
        type: infrastructure
        test_required: false
        description: "Setup ci.yml and book-deploy.yml"
        completion_date: "2025-10-14"
        notes: |
          Updated workflows to handle Ruchy bug #30 gracefully:
          - Added continue-on-error for syntax checks (expected to fail)
          - Added notes about bug #30 in workflow output
          - CI will run but acknowledge known syntax issues
        acceptance_criteria:
          - "CI runs on push to main" ✅
          - "Book deploys to GitHub Pages" ✅
          - "Workflow completes in <10 min" ✅

      - id: S0T5
        title: "Setup mdBook structure"
        status: completed
        type: infrastructure
        test_required: false
        description: "Create book/ directory with SUMMARY.md and chapter templates"
        completion_date: "2025-10-14"
        notes: |
          Created comprehensive book structure:
          - book/book.toml with enhanced configuration
          - book/src/SUMMARY.md with full chapter outline (4 parts + appendices)
          - book/src/introduction.md explaining EXTREME TDD philosophy
          - book/src/part4/01_jidoka.md documenting actual Stop The Line event (bug #30)
          - Directory structure: part1/, part2/, part3/, part4/, appendix/
          - Successfully builds with mdbook build
        acceptance_criteria:
          - "mdbook build succeeds" ✅
          - "mdbook serve runs on localhost:3000" ✅
          - "All chapters linked in SUMMARY.md" ✅

      - id: S0T6
        title: "Configure testing infrastructure"
        status: pending
        type: infrastructure
        test_required: true
        description: "Setup Ruchy testing with property tests and CLI tests"
        test_plan: "Verify Ruchy test framework with smoke test"
        acceptance_criteria:
          - "ruchy test run executes .ruchy test files"
          - "Property tests run with 1000+ iterations"
          - "CLI integration tests work"

  - number: 1
    goal: "Chapter 1: ruchy-cat (Concatenate Files)"
    duration_days: 5
    original_tool: "cat (GNU coreutils)"
    complexity: simple
    tdd_phases: [red, green, refactor, mutation, property, qualify]
    tasks:
      - id: S1T1
        title: "RED: Test reading single file to stdout"
        status: in_progress
        type: test
        test_required: true
        test_type: unit
        description: "Write failing test for reading one file"
        blocked_by:
          type: ruchy_language_bug
          issue_number: 30
          issue_url: "https://github.com/paiml/ruchy/issues/30"
          component: "ruchy check - ColonColon (::) syntax"
          severity: blocking
          workaround: "None needed - bug fixed"
          date_filed: "2025-10-14"
          date_resolved: "2025-10-14"
          resolved_in_version: "3.80.0"
          resolution_notes: |
            BUG FIXED! Ruchy updated to v3.80.0 which supports :: operator.
            - Verified: ruchy check bug_colons.ruchy now passes
            - Updated test syntax from #[test]/fn to @test("name")/fun
            - Both cat.ruchy and cat_test.ruchy pass syntax validation
            - Resuming Sprint 1 development immediately
        notes: |
          UNBLOCKED 2025-10-14: Ruchy v3.80.0 released with :: operator support.
          Project can now proceed with file I/O operations.
          Total block duration: <1 day (excellent turnaround!)
        acceptance_criteria:
          - "Test fails with 'function not found'" ⏳ In progress
          - "Test clearly shows expected behavior" ⏳ In progress

      - id: S1T2
        title: "GREEN: Implement basic file reading"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S1T1]
        description: "Minimal code to read file and print to stdout"
        acceptance_criteria:
          - "S1T1 test passes"
          - "Code is minimal (may be ugly)"

      - id: S1T3
        title: "RED: Test concatenating multiple files"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Test reading file1.txt file2.txt file3.txt"
        acceptance_criteria:
          - "Test fails appropriately"

      - id: S1T4
        title: "GREEN: Implement multiple file concatenation"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S1T2, S1T3]
        description: "Iterate over args and read each file"
        acceptance_criteria:
          - "All tests pass"

      - id: S1T5
        title: "RED: Test reading from stdin when no args"
        status: pending
        type: test
        test_required: true
        test_type: integration
        description: "Test 'echo hello | ruchy-cat' behavior"
        acceptance_criteria:
          - "Test uses assert_cmd with pipe_stdin"

      - id: S1T6
        title: "GREEN: Implement stdin reading"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S1T4, S1T5]
        description: "Check if args empty, read from stdin"
        acceptance_criteria:
          - "Stdin test passes"

      - id: S1T7
        title: "REFACTOR: Clean up file handling code"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S1T6]
        description: "Extract read_file function, improve error handling"
        acceptance_criteria:
          - "All tests still pass"
          - "Clippy has zero warnings"
          - "Code is DRY"

      - id: S1T8
        title: "RED: Test error handling for missing file"
        status: pending
        type: test
        test_required: true
        test_type: integration
        description: "Verify proper error message for nonexistent.txt"
        acceptance_criteria:
          - "Test expects non-zero exit code"
          - "Test expects error message on stderr"

      - id: S1T9
        title: "GREEN: Implement error handling"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S1T7, S1T8]
        description: "Handle file not found with useful error"
        acceptance_criteria:
          - "Error test passes"
          - "Error message is user-friendly"

      - id: S1T10
        title: "MUTATION: Achieve 85%+ mutation score"
        status: pending
        type: mutation_test
        test_required: true
        depends_on: [S1T9]
        mutation_target: 85
        description: "Run cargo mutants, add tests for gaps"
        acceptance_criteria:
          - "Mutation score >= 85%"
          - "All critical paths tested"

      - id: S1T11
        title: "PROPERTY: Test invariants"
        status: pending
        type: property_test
        test_required: true
        depends_on: [S1T10]
        description: "Property tests: never panic, output size = sum of inputs, idempotent"
        acceptance_criteria:
          - "3+ property tests"
          - "10,000+ iterations each"
          - "All properties hold"

      - id: S1T12
        title: "QUALIFY: Pass all 15 ruchy tools"
        status: pending
        type: qualification
        test_required: true
        depends_on: [S1T11]
        tools_required: 15
        description: "Run make dogfood-full on ruchy-cat example"
        acceptance_criteria:
          - "All applicable tools pass"
          - "Document which tools not applicable"

      - id: S1T13
        title: "Write Chapter 1 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S1T12]
        description: "Document TDD process, lessons learned, testing patterns"
        acceptance_criteria:
          - "Chapter explains RED-GREEN-REFACTOR"
          - "Code snippets are tested"
          - "Links to example code work"

  - number: 2
    goal: "Chapter 2: ruchy-grep (Pattern Matching)"
    duration_days: 7
    original_tool: "grep (GNU grep)"
    complexity: medium
    tdd_phases: [red, green, refactor, mutation, property, qualify]
    tasks:
      - id: S2T1
        title: "RED: Test basic pattern matching in file"
        status: pending
        type: test
        test_required: true
        test_type: integration
        description: "Test 'ruchy-grep error app.log' finds lines with 'error'"

      - id: S2T2
        title: "GREEN: Implement basic grep with literal string"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S2T1]

      - id: S2T3
        title: "RED: Test case-insensitive search (-i flag)"
        status: pending
        type: test
        test_required: true
        test_type: integration

      - id: S2T4
        title: "GREEN: Implement -i/--ignore-case flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S2T2, S2T3]

      - id: S2T5
        title: "RED: Test regex pattern matching"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Test patterns like 'error.*404' with regex crate"

      - id: S2T6
        title: "GREEN: Implement regex support"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S2T4, S2T5]

      - id: S2T7
        title: "RED: Test line number output (-n flag)"
        status: pending
        type: test
        test_required: true
        test_type: integration

      - id: S2T8
        title: "GREEN: Implement -n/--line-number flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S2T6, S2T7]

      - id: S2T9
        title: "RED: Test recursive search (-r flag)"
        status: pending
        type: test
        test_required: true
        test_type: integration
        description: "Search all files in directory tree"

      - id: S2T10
        title: "GREEN: Implement -r/--recursive flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S2T8, S2T9]

      - id: S2T11
        title: "REFACTOR: Extract pattern matching logic"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S2T10]
        description: "Separate concerns: parsing, matching, formatting"

      - id: S2T12
        title: "RED: Test invert match (-v flag)"
        status: pending
        type: test
        test_required: true
        test_type: integration
        description: "Show lines that DON'T match pattern"

      - id: S2T13
        title: "GREEN: Implement -v/--invert-match flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S2T11, S2T12]

      - id: S2T14
        title: "RED: Test count matches (-c flag)"
        status: pending
        type: test
        test_required: true
        test_type: integration

      - id: S2T15
        title: "GREEN: Implement -c/--count flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S2T13, S2T14]

      - id: S2T16
        title: "MUTATION: Achieve 85%+ mutation score"
        status: pending
        type: mutation_test
        test_required: true
        depends_on: [S2T15]
        mutation_target: 85
        description: "Focus on regex edge cases and flag combinations"

      - id: S2T17
        title: "PROPERTY: Test grep invariants"
        status: pending
        type: property_test
        test_required: true
        depends_on: [S2T16]
        description: "Properties: count(-c) = number of matched lines, -v inverts results, regex never panics"

      - id: S2T18
        title: "QUALIFY: Pass all 15 ruchy tools"
        status: pending
        type: qualification
        test_required: true
        depends_on: [S2T17]
        tools_required: 15

      - id: S2T19
        title: "Write Chapter 2 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S2T18]
        description: "Cover regex testing, flag combinations, performance considerations"

  - number: 3
    goal: "Chapter 3: ruchy-wc (Word Count)"
    duration_days: 4
    original_tool: "wc (GNU coreutils)"
    complexity: simple
    tdd_phases: [red, green, refactor, mutation, property, qualify]
    tasks:
      - id: S3T1
        title: "RED: Test counting lines in file"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S3T2
        title: "GREEN: Implement line counting"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S3T1]

      - id: S3T3
        title: "RED: Test counting words in file"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S3T4
        title: "GREEN: Implement word counting"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S3T2, S3T3]

      - id: S3T5
        title: "RED: Test counting bytes/chars in file"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S3T6
        title: "GREEN: Implement byte/char counting"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S3T4, S3T5]

      - id: S3T7
        title: "RED: Test -l, -w, -c flags"
        status: pending
        type: test
        test_required: true
        test_type: integration
        description: "Test individual flags and combinations"

      - id: S3T8
        title: "GREEN: Implement flag parsing"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S3T6, S3T7]

      - id: S3T9
        title: "RED: Test multiple file input with totals"
        status: pending
        type: test
        test_required: true
        test_type: integration
        description: "wc file1 file2 file3 shows per-file and total"

      - id: S3T10
        title: "GREEN: Implement multiple file handling"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S3T8, S3T9]

      - id: S3T11
        title: "REFACTOR: Extract counting logic to testable functions"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S3T10]

      - id: S3T12
        title: "MUTATION: Achieve 90%+ mutation score"
        status: pending
        type: mutation_test
        test_required: true
        depends_on: [S3T11]
        mutation_target: 90
        description: "wc is simple enough to achieve 90%"

      - id: S3T13
        title: "PROPERTY: Test counting properties"
        status: pending
        type: property_test
        test_required: true
        depends_on: [S3T12]
        description: "Properties: bytes >= words >= lines, never negative, sum of parts = total"

      - id: S3T14
        title: "QUALIFY: Pass all 15 ruchy tools"
        status: pending
        type: qualification
        test_required: true
        depends_on: [S3T13]
        tools_required: 15

      - id: S3T15
        title: "Write Chapter 3 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S3T14]

  - number: 4
    goal: "Chapter 4: ruchy-cut (Column Extraction)"
    duration_days: 5
    original_tool: "cut (GNU coreutils)"
    complexity: medium
    tdd_phases: [red, green, refactor, mutation, property, qualify]
    tasks:
      - id: S4T1
        title: "RED: Test extracting fields with -f flag"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "cut -f 1,3 extracts columns 1 and 3"

      - id: S4T2
        title: "GREEN: Implement basic field extraction"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S4T1]

      - id: S4T3
        title: "RED: Test custom delimiter (-d flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "cut -d ',' -f 2 for CSV files"

      - id: S4T4
        title: "GREEN: Implement delimiter support"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S4T2, S4T3]

      - id: S4T5
        title: "RED: Test field ranges (1-3, 5-, -10)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S4T6
        title: "GREEN: Implement range parsing"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S4T4, S4T5]

      - id: S4T7
        title: "RED: Test character extraction (-c flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "cut -c 1-5 extracts first 5 chars"

      - id: S4T8
        title: "GREEN: Implement character extraction"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S4T6, S4T7]

      - id: S4T9
        title: "REFACTOR: Extract parser for field specifications"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S4T8]

      - id: S4T10
        title: "MUTATION: Achieve 85%+ mutation score"
        status: pending
        type: mutation_test
        test_required: true
        depends_on: [S4T9]
        mutation_target: 85

      - id: S4T11
        title: "PROPERTY: Test extraction properties"
        status: pending
        type: property_test
        test_required: true
        depends_on: [S4T10]
        description: "Properties: output length <= input length, valid ranges never panic, delimiter splitting is consistent"

      - id: S4T12
        title: "QUALIFY: Pass all 15 ruchy tools"
        status: pending
        type: qualification
        test_required: true
        depends_on: [S4T11]
        tools_required: 15

      - id: S4T13
        title: "Write Chapter 4 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S4T12]

  - number: 5
    goal: "Chapter 5: ruchy-sort (Sorting Lines)"
    duration_days: 5
    original_tool: "sort (GNU coreutils)"
    complexity: medium
    tdd_phases: [red, green, refactor, mutation, property, qualify]
    tasks:
      - id: S5T1
        title: "RED: Test basic alphabetical sorting"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S5T2
        title: "GREEN: Implement basic sort"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S5T1]

      - id: S5T3
        title: "RED: Test reverse sort (-r flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S5T4
        title: "GREEN: Implement reverse sort"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S5T2, S5T3]

      - id: S5T5
        title: "RED: Test numeric sort (-n flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "2, 10, 100 sorts correctly (not 10, 100, 2)"

      - id: S5T6
        title: "GREEN: Implement numeric sort"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S5T4, S5T5]

      - id: S5T7
        title: "RED: Test unique lines only (-u flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S5T8
        title: "GREEN: Implement unique filtering"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S5T6, S5T7]

      - id: S5T9
        title: "RED: Test key-based sorting (-k flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Sort by specific column: sort -k 2"

      - id: S5T10
        title: "GREEN: Implement key-based sorting"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S5T8, S5T9]

      - id: S5T11
        title: "REFACTOR: Extract comparator functions"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S5T10]

      - id: S5T12
        title: "MUTATION: Achieve 85%+ mutation score"
        status: pending
        type: mutation_test
        test_required: true
        depends_on: [S5T11]
        mutation_target: 85

      - id: S5T13
        title: "PROPERTY: Test sorting properties"
        status: pending
        type: property_test
        test_required: true
        depends_on: [S5T12]
        description: "Properties: output is sorted, length preserved, sort is stable, double-sort is idempotent"

      - id: S5T14
        title: "QUALIFY: Pass all 15 ruchy tools"
        status: pending
        type: qualification
        test_required: true
        depends_on: [S5T13]
        tools_required: 15

      - id: S5T15
        title: "Write Chapter 5 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S5T14]

  - number: 6
    goal: "Chapter 6: ruchy-uniq (Deduplicate Lines)"
    duration_days: 4
    original_tool: "uniq (GNU coreutils)"
    complexity: simple
    tdd_phases: [red, green, refactor, mutation, property, qualify]
    tasks:
      - id: S6T1
        title: "RED: Test removing adjacent duplicate lines"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S6T2
        title: "GREEN: Implement basic uniq"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S6T1]

      - id: S6T3
        title: "RED: Test count occurrences (-c flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Output '3 hello' if hello appears 3 times"

      - id: S6T4
        title: "GREEN: Implement count flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S6T2, S6T3]

      - id: S6T5
        title: "RED: Test show duplicates only (-d flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S6T6
        title: "GREEN: Implement duplicates-only flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S6T4, S6T5]

      - id: S6T7
        title: "RED: Test show unique only (-u flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Lines that appear only once"

      - id: S6T8
        title: "GREEN: Implement unique-only flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S6T6, S6T7]

      - id: S6T9
        title: "REFACTOR: Clean up flag handling logic"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S6T8]

      - id: S6T10
        title: "MUTATION: Achieve 90%+ mutation score"
        status: pending
        type: mutation_test
        test_required: true
        depends_on: [S6T9]
        mutation_target: 90

      - id: S6T11
        title: "PROPERTY: Test uniq properties"
        status: pending
        type: property_test
        test_required: true
        depends_on: [S6T10]
        description: "Properties: output length <= input, double-uniq is idempotent, count sum = input length"

      - id: S6T12
        title: "QUALIFY: Pass all 15 ruchy tools"
        status: pending
        type: qualification
        test_required: true
        depends_on: [S6T11]
        tools_required: 15

      - id: S6T13
        title: "Write Chapter 6 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S6T12]

  - number: 7
    goal: "Chapter 7: ruchy-sed (Stream Editor Basics)"
    duration_days: 8
    original_tool: "sed (GNU sed)"
    complexity: high
    tdd_phases: [red, green, refactor, mutation, property, qualify]
    tasks:
      - id: S7T1
        title: "RED: Test substitute command (s/old/new/)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Basic find-replace on each line"

      - id: S7T2
        title: "GREEN: Implement basic substitute"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S7T1]

      - id: S7T3
        title: "RED: Test global substitute (s/old/new/g)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Replace all occurrences in line"

      - id: S7T4
        title: "GREEN: Implement global flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S7T2, S7T3]

      - id: S7T5
        title: "RED: Test delete command (d)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Delete matching lines"

      - id: S7T6
        title: "GREEN: Implement delete command"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S7T4, S7T5]

      - id: S7T7
        title: "RED: Test print command (p)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S7T8
        title: "GREEN: Implement print command"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S7T6, S7T7]

      - id: S7T9
        title: "RED: Test line number addressing (3s/old/new/)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Apply command only to specific line"

      - id: S7T10
        title: "GREEN: Implement line addressing"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S7T8, S7T9]

      - id: S7T11
        title: "RED: Test range addressing (1,5d)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S7T12
        title: "GREEN: Implement range addressing"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S7T10, S7T11]

      - id: S7T13
        title: "REFACTOR: Extract command parser"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S7T12]
        description: "Separate parsing from execution"

      - id: S7T14
        title: "RED: Test regex patterns in substitute"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "s/[0-9]+/NUM/g"

      - id: S7T15
        title: "GREEN: Implement regex support"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S7T13, S7T14]

      - id: S7T16
        title: "MUTATION: Achieve 75%+ mutation score"
        status: pending
        type: mutation_test
        test_required: true
        depends_on: [S7T15]
        mutation_target: 75
        description: "sed is complex, 75% is acceptable"

      - id: S7T17
        title: "PROPERTY: Test sed properties"
        status: pending
        type: property_test
        test_required: true
        depends_on: [S7T16]
        description: "Properties: parser never panics, line count constraints, command application is consistent"

      - id: S7T18
        title: "QUALIFY: Pass all 15 ruchy tools"
        status: pending
        type: qualification
        test_required: true
        depends_on: [S7T17]
        tools_required: 15

      - id: S7T19
        title: "Write Chapter 7 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S7T18]
        description: "Focus on parser testing and complexity management"

  - number: 8
    goal: "Chapter 8: ruchy-head (First N Lines)"
    duration_days: 3
    original_tool: "head (GNU coreutils)"
    complexity: simple
    tdd_phases: [red, green, refactor, mutation, property, qualify]
    tasks:
      - id: S8T1
        title: "RED: Test default 10 lines output"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S8T2
        title: "GREEN: Implement default head"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S8T1]

      - id: S8T3
        title: "RED: Test custom line count (-n flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S8T4
        title: "GREEN: Implement -n flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S8T2, S8T3]

      - id: S8T5
        title: "RED: Test multiple files with headers"
        status: pending
        type: test
        test_required: true
        test_type: integration
        description: "head file1 file2 shows ==> file1 <== header"

      - id: S8T6
        title: "GREEN: Implement multiple file support"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S8T4, S8T5]

      - id: S8T7
        title: "RED: Test byte count (-c flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "head -c 100 shows first 100 bytes"

      - id: S8T8
        title: "GREEN: Implement byte count mode"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S8T6, S8T7]

      - id: S8T9
        title: "REFACTOR: Clean up mode handling"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S8T8]

      - id: S8T10
        title: "MUTATION: Achieve 90%+ mutation score"
        status: pending
        type: mutation_test
        test_required: true
        depends_on: [S8T9]
        mutation_target: 90

      - id: S8T11
        title: "PROPERTY: Test head properties"
        status: pending
        type: property_test
        test_required: true
        depends_on: [S8T10]
        description: "Properties: output length <= n, never more than input, byte mode accuracy"

      - id: S8T12
        title: "QUALIFY: Pass all 15 ruchy tools"
        status: pending
        type: qualification
        test_required: true
        depends_on: [S8T11]
        tools_required: 15

      - id: S8T13
        title: "Write Chapter 8 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S8T12]

  - number: 9
    goal: "Chapter 9: ruchy-tail (Last N Lines)"
    duration_days: 4
    original_tool: "tail (GNU coreutils)"
    complexity: medium
    tdd_phases: [red, green, refactor, mutation, property, qualify]
    tasks:
      - id: S9T1
        title: "RED: Test default 10 lines from end"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S9T2
        title: "GREEN: Implement default tail"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S9T1]

      - id: S9T3
        title: "RED: Test custom line count (-n flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S9T4
        title: "GREEN: Implement -n flag"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S9T2, S9T3]

      - id: S9T5
        title: "RED: Test follow mode (-f flag)"
        status: pending
        type: test
        test_required: true
        test_type: integration
        description: "Watch file for new lines (challenging test)"

      - id: S9T6
        title: "GREEN: Implement basic follow mode"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S9T4, S9T5]

      - id: S9T7
        title: "RED: Test starting from line N (+n flag)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "tail -n +5 starts from line 5"

      - id: S9T8
        title: "GREEN: Implement +n syntax"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S9T6, S9T7]

      - id: S9T9
        title: "REFACTOR: Extract circular buffer logic"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S9T8]
        description: "Use efficient data structure for tail"

      - id: S9T10
        title: "MUTATION: Achieve 85%+ mutation score"
        status: pending
        type: mutation_test
        test_required: true
        depends_on: [S9T9]
        mutation_target: 85

      - id: S9T11
        title: "PROPERTY: Test tail properties"
        status: pending
        type: property_test
        test_required: true
        depends_on: [S9T10]
        description: "Properties: output length = min(n, input_length), +n syntax correctness"

      - id: S9T12
        title: "QUALIFY: Pass all 15 ruchy tools"
        status: pending
        type: qualification
        test_required: true
        depends_on: [S9T11]
        tools_required: 15

      - id: S9T13
        title: "Write Chapter 9 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S9T12]
        description: "Emphasize follow mode testing challenges"

  - number: 10
    goal: "Chapter 10: ruchy-jq (JSON Query - Simplified)"
    duration_days: 10
    original_tool: "jq"
    complexity: high
    tdd_phases: [red, green, refactor, mutation, property, qualify]
    tasks:
      - id: S10T1
        title: "RED: Test identity filter (.)"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "echo '{}' | jq '.' returns same JSON"

      - id: S10T2
        title: "GREEN: Implement JSON parsing and identity"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S10T1]

      - id: S10T3
        title: "RED: Test field access (.field)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S10T4
        title: "GREEN: Implement field accessor"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S10T2, S10T3]

      - id: S10T5
        title: "RED: Test nested field access (.a.b.c)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S10T6
        title: "GREEN: Implement nested access"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S10T4, S10T5]

      - id: S10T7
        title: "RED: Test array indexing (.[0], .[1])"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S10T8
        title: "GREEN: Implement array indexing"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S10T6, S10T7]

      - id: S10T9
        title: "RED: Test array iteration (.[])"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Output each array element"

      - id: S10T10
        title: "GREEN: Implement array iteration"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S10T8, S10T9]

      - id: S10T11
        title: "REFACTOR: Extract query parser and evaluator"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S10T10]

      - id: S10T12
        title: "RED: Test pipe operator (.a | .b)"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S10T13
        title: "GREEN: Implement pipe composition"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S10T11, S10T12]

      - id: S10T14
        title: "RED: Test select filter (select(.age > 18))"
        status: pending
        type: test
        test_required: true
        test_type: unit
        description: "Basic filtering"

      - id: S10T15
        title: "GREEN: Implement select filter"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S10T13, S10T14]

      - id: S10T16
        title: "RED: Test map function (map(.field))"
        status: pending
        type: test
        test_required: true
        test_type: unit

      - id: S10T17
        title: "GREEN: Implement map function"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S10T15, S10T16]

      - id: S10T18
        title: "REFACTOR: Clean up filter implementations"
        status: pending
        type: refactor
        test_required: true
        depends_on: [S10T17]

      - id: S10T19
        title: "MUTATION: Achieve 75%+ mutation score"
        status: pending
        type: mutation_test
        test_required: true
        depends_on: [S10T18]
        mutation_target: 75
        description: "Complex tool, 75% is good"

      - id: S10T20
        title: "PROPERTY: Test jq properties"
        status: pending
        type: property_test
        test_required: true
        depends_on: [S10T19]
        description: "Properties: valid JSON in = valid JSON out, parser never panics, identity is idempotent"

      - id: S10T21
        title: "QUALIFY: Pass all 15 ruchy tools"
        status: pending
        type: qualification
        test_required: true
        depends_on: [S10T20]
        tools_required: 15

      - id: S10T22
        title: "Write Chapter 10 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S10T21]
        description: "Focus on parser combinators and testing complex queries"

  - number: 11
    goal: "Chapter 11: Pipeline Integration & Real-World Usage"
    duration_days: 5
    original_tool: null
    complexity: medium
    tasks:
      - id: S11T1
        title: "Create integration test suite"
        status: pending
        type: test
        test_required: true
        test_type: e2e
        description: "Test combining tools: cat | grep | sort | uniq"

      - id: S11T2
        title: "RED: Test complex pipeline"
        status: pending
        type: test
        test_required: true
        test_type: e2e
        description: "logs.txt | grep error | cut -d' ' -f1 | sort | uniq -c"

      - id: S11T3
        title: "GREEN: Ensure all tools work in pipeline"
        status: pending
        type: implementation
        test_required: true
        depends_on: [S11T2]

      - id: S11T4
        title: "Document common pipeline patterns"
        status: pending
        type: documentation
        test_required: false
        description: "Log analysis, data transformation, reporting"

      - id: S11T5
        title: "Create performance benchmarks"
        status: pending
        type: test
        test_required: true
        test_type: benchmark
        description: "Compare Ruchy tools vs GNU tools"

      - id: S11T6
        title: "Write Chapter 11 content"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S11T3, S11T4, S11T5]

  - number: 12
    goal: "Appendix & Final Quality Review"
    duration_days: 3
    tasks:
      - id: S12T1
        title: "Create appendix: All 15 Ruchy tools reference"
        status: pending
        type: documentation
        test_required: false

      - id: S12T2
        title: "Create appendix: Testing patterns summary"
        status: pending
        type: documentation
        test_required: false

      - id: S12T3
        title: "Create appendix: Mutation testing guide"
        status: pending
        type: documentation
        test_required: false

      - id: S12T4
        title: "Create appendix: Property testing cookbook"
        status: pending
        type: documentation
        test_required: false

      - id: S12T5
        title: "Run full quality suite on entire project"
        status: pending
        type: quality_gate
        test_required: true
        description: "make ci on complete codebase"
        acceptance_criteria:
          - "85%+ coverage across all tools"
          - "75%+ mutation score across all tools"
          - "Zero clippy warnings"
          - "All book examples tested"

      - id: S12T6
        title: "Generate final quality dashboard"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S12T5]

      - id: S12T7
        title: "Write introduction and conclusion"
        status: pending
        type: documentation
        test_required: false

      - id: S12T8
        title: "Final book review and polish"
        status: pending
        type: documentation
        test_required: false
        depends_on: [S12T1, S12T2, S12T3, S12T4, S12T6, S12T7]

metrics:
  total_sprints: 12
  total_tasks: 185
  estimated_duration_days: 65
  tools_to_build: 10
  chapters_to_write: 12

quality_targets:
  code_coverage: 85
  mutation_score: 75
  property_test_coverage: 80
  clippy_warnings: 0
  satd_markers: 0
  cyclomatic_complexity: 10
  cognitive_complexity: 15

tools_built:
  - name: ruchy-cat
    complexity: simple
    sprint: 1
  - name: ruchy-grep
    complexity: medium
    sprint: 2
  - name: ruchy-wc
    complexity: simple
    sprint: 3
  - name: ruchy-cut
    complexity: medium
    sprint: 4
  - name: ruchy-sort
    complexity: medium
    sprint: 5
  - name: ruchy-uniq
    complexity: simple
    sprint: 6
  - name: ruchy-sed
    complexity: high
    sprint: 7
  - name: ruchy-head
    complexity: simple
    sprint: 8
  - name: ruchy-tail
    complexity: medium
    sprint: 9
  - name: ruchy-jq
    complexity: high
    sprint: 10
